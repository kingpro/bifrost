// Code generated by protoc-gen-go. DO NOT EDIT.
// source: push.proto

package push

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConnectReq struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	Password             []byte   `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	CleanSession         bool     `protobuf:"varint,4,opt,name=CleanSession,proto3" json:"CleanSession,omitempty"`
	GrpcAddress          string   `protobuf:"bytes,5,opt,name=GrpcAddress,proto3" json:"GrpcAddress,omitempty"`
	TraceID              string   `protobuf:"bytes,6,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	ClientAddress        string   `protobuf:"bytes,7,opt,name=ClientAddress,proto3" json:"ClientAddress,omitempty"`
	ConnectionID         int64    `protobuf:"varint,8,opt,name=ConnectionID,proto3" json:"ConnectionID,omitempty"`
	Service              string   `protobuf:"bytes,9,opt,name=Service,proto3" json:"Service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectReq) Reset()         { *m = ConnectReq{} }
func (m *ConnectReq) String() string { return proto.CompactTextString(m) }
func (*ConnectReq) ProtoMessage()    {}
func (*ConnectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{0}
}

func (m *ConnectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectReq.Unmarshal(m, b)
}
func (m *ConnectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectReq.Marshal(b, m, deterministic)
}
func (m *ConnectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectReq.Merge(m, src)
}
func (m *ConnectReq) XXX_Size() int {
	return xxx_messageInfo_ConnectReq.Size(m)
}
func (m *ConnectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectReq proto.InternalMessageInfo

func (m *ConnectReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *ConnectReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ConnectReq) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *ConnectReq) GetCleanSession() bool {
	if m != nil {
		return m.CleanSession
	}
	return false
}

func (m *ConnectReq) GetGrpcAddress() string {
	if m != nil {
		return m.GrpcAddress
	}
	return ""
}

func (m *ConnectReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *ConnectReq) GetClientAddress() string {
	if m != nil {
		return m.ClientAddress
	}
	return ""
}

func (m *ConnectReq) GetConnectionID() int64 {
	if m != nil {
		return m.ConnectionID
	}
	return 0
}

func (m *ConnectReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

// 该Topic当前读取位置Index和最新消息Index。
// connd需要拉取区间[CurrentIndex, LastestIndex]
// 内的全部消息。
type Record struct {
	Topic                string   `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Qos                  int32    `protobuf:"varint,2,opt,name=Qos,proto3" json:"Qos,omitempty"`
	CurrentIndex         []byte   `protobuf:"bytes,3,opt,name=CurrentIndex,proto3" json:"CurrentIndex,omitempty"`
	LastestIndex         []byte   `protobuf:"bytes,4,opt,name=LastestIndex,proto3" json:"LastestIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{1}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Record) GetQos() int32 {
	if m != nil {
		return m.Qos
	}
	return 0
}

func (m *Record) GetCurrentIndex() []byte {
	if m != nil {
		return m.CurrentIndex
	}
	return nil
}

func (m *Record) GetLastestIndex() []byte {
	if m != nil {
		return m.LastestIndex
	}
	return nil
}

type ConnectResp struct {
	Cookie               []byte    `protobuf:"bytes,1,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	SessionPresent       bool      `protobuf:"varint,2,opt,name=SessionPresent,proto3" json:"SessionPresent,omitempty"`
	Records              []*Record `protobuf:"bytes,3,rep,name=Records,proto3" json:"Records,omitempty"`
	StatLabel            string    `protobuf:"bytes,4,opt,name=StatLabel,proto3" json:"StatLabel,omitempty"`
	MqttCode             int32     `protobuf:"varint,5,opt,name=MqttCode,proto3" json:"MqttCode,omitempty"`
	MessageID            int64     `protobuf:"varint,6,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Service              string    `protobuf:"bytes,7,opt,name=Service,proto3" json:"Service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ConnectResp) Reset()         { *m = ConnectResp{} }
func (m *ConnectResp) String() string { return proto.CompactTextString(m) }
func (*ConnectResp) ProtoMessage()    {}
func (*ConnectResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{2}
}

func (m *ConnectResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResp.Unmarshal(m, b)
}
func (m *ConnectResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResp.Marshal(b, m, deterministic)
}
func (m *ConnectResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResp.Merge(m, src)
}
func (m *ConnectResp) XXX_Size() int {
	return xxx_messageInfo_ConnectResp.Size(m)
}
func (m *ConnectResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResp.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResp proto.InternalMessageInfo

func (m *ConnectResp) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *ConnectResp) GetSessionPresent() bool {
	if m != nil {
		return m.SessionPresent
	}
	return false
}

func (m *ConnectResp) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *ConnectResp) GetStatLabel() string {
	if m != nil {
		return m.StatLabel
	}
	return ""
}

func (m *ConnectResp) GetMqttCode() int32 {
	if m != nil {
		return m.MqttCode
	}
	return 0
}

func (m *ConnectResp) GetMessageID() int64 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *ConnectResp) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type DisconnectReq struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Cookie               []byte   `protobuf:"bytes,2,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	GrpcAddress          string   `protobuf:"bytes,3,opt,name=GrpcAddress,proto3" json:"GrpcAddress,omitempty"`
	CleanSession         bool     `protobuf:"varint,4,opt,name=CleanSession,proto3" json:"CleanSession,omitempty"`
	TraceID              string   `protobuf:"bytes,5,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Lost                 bool     `protobuf:"varint,6,opt,name=Lost,proto3" json:"Lost,omitempty"`
	Service              string   `protobuf:"bytes,7,opt,name=Service,proto3" json:"Service,omitempty"`
	StatLabel            string   `protobuf:"bytes,8,opt,name=StatLabel,proto3" json:"StatLabel,omitempty"`
	ConnectionID         int64    `protobuf:"varint,9,opt,name=ConnectionID,proto3" json:"ConnectionID,omitempty"`
	Kick                 bool     `protobuf:"varint,10,opt,name=kick,proto3" json:"kick,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectReq) Reset()         { *m = DisconnectReq{} }
func (m *DisconnectReq) String() string { return proto.CompactTextString(m) }
func (*DisconnectReq) ProtoMessage()    {}
func (*DisconnectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{3}
}

func (m *DisconnectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectReq.Unmarshal(m, b)
}
func (m *DisconnectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectReq.Marshal(b, m, deterministic)
}
func (m *DisconnectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectReq.Merge(m, src)
}
func (m *DisconnectReq) XXX_Size() int {
	return xxx_messageInfo_DisconnectReq.Size(m)
}
func (m *DisconnectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectReq.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectReq proto.InternalMessageInfo

func (m *DisconnectReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *DisconnectReq) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *DisconnectReq) GetGrpcAddress() string {
	if m != nil {
		return m.GrpcAddress
	}
	return ""
}

func (m *DisconnectReq) GetCleanSession() bool {
	if m != nil {
		return m.CleanSession
	}
	return false
}

func (m *DisconnectReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *DisconnectReq) GetLost() bool {
	if m != nil {
		return m.Lost
	}
	return false
}

func (m *DisconnectReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *DisconnectReq) GetStatLabel() string {
	if m != nil {
		return m.StatLabel
	}
	return ""
}

func (m *DisconnectReq) GetConnectionID() int64 {
	if m != nil {
		return m.ConnectionID
	}
	return 0
}

func (m *DisconnectReq) GetKick() bool {
	if m != nil {
		return m.Kick
	}
	return false
}

type DisconnectResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectResp) Reset()         { *m = DisconnectResp{} }
func (m *DisconnectResp) String() string { return proto.CompactTextString(m) }
func (*DisconnectResp) ProtoMessage()    {}
func (*DisconnectResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{4}
}

func (m *DisconnectResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectResp.Unmarshal(m, b)
}
func (m *DisconnectResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectResp.Marshal(b, m, deterministic)
}
func (m *DisconnectResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectResp.Merge(m, src)
}
func (m *DisconnectResp) XXX_Size() int {
	return xxx_messageInfo_DisconnectResp.Size(m)
}
func (m *DisconnectResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectResp.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectResp proto.InternalMessageInfo

type SubscribeReq struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Cookie               []byte   `protobuf:"bytes,2,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	Topics               []string `protobuf:"bytes,3,rep,name=Topics,proto3" json:"Topics,omitempty"`
	Qoss                 []int32  `protobuf:"varint,4,rep,packed,name=Qoss,proto3" json:"Qoss,omitempty"`
	TraceID              string   `protobuf:"bytes,5,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Service              string   `protobuf:"bytes,6,opt,name=Service,proto3" json:"Service,omitempty"`
	CleanSession         bool     `protobuf:"varint,7,opt,name=CleanSession,proto3" json:"CleanSession,omitempty"`
	StatLabel            string   `protobuf:"bytes,8,opt,name=StatLabel,proto3" json:"StatLabel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeReq) Reset()         { *m = SubscribeReq{} }
func (m *SubscribeReq) String() string { return proto.CompactTextString(m) }
func (*SubscribeReq) ProtoMessage()    {}
func (*SubscribeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{5}
}

func (m *SubscribeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeReq.Unmarshal(m, b)
}
func (m *SubscribeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeReq.Marshal(b, m, deterministic)
}
func (m *SubscribeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeReq.Merge(m, src)
}
func (m *SubscribeReq) XXX_Size() int {
	return xxx_messageInfo_SubscribeReq.Size(m)
}
func (m *SubscribeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeReq.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeReq proto.InternalMessageInfo

func (m *SubscribeReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *SubscribeReq) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *SubscribeReq) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *SubscribeReq) GetQoss() []int32 {
	if m != nil {
		return m.Qoss
	}
	return nil
}

func (m *SubscribeReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *SubscribeReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *SubscribeReq) GetCleanSession() bool {
	if m != nil {
		return m.CleanSession
	}
	return false
}

func (m *SubscribeReq) GetStatLabel() string {
	if m != nil {
		return m.StatLabel
	}
	return ""
}

type SubscribeResp struct {
	Cookie               []byte     `protobuf:"bytes,1,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	Qoss                 []int32    `protobuf:"varint,2,rep,packed,name=Qoss,proto3" json:"Qoss,omitempty"`
	Index                [][]byte   `protobuf:"bytes,3,rep,name=Index,proto3" json:"Index,omitempty"`
	RetainMessage        []*Message `protobuf:"bytes,4,rep,name=RetainMessage,proto3" json:"RetainMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SubscribeResp) Reset()         { *m = SubscribeResp{} }
func (m *SubscribeResp) String() string { return proto.CompactTextString(m) }
func (*SubscribeResp) ProtoMessage()    {}
func (*SubscribeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{6}
}

func (m *SubscribeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResp.Unmarshal(m, b)
}
func (m *SubscribeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResp.Marshal(b, m, deterministic)
}
func (m *SubscribeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResp.Merge(m, src)
}
func (m *SubscribeResp) XXX_Size() int {
	return xxx_messageInfo_SubscribeResp.Size(m)
}
func (m *SubscribeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResp.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResp proto.InternalMessageInfo

func (m *SubscribeResp) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *SubscribeResp) GetQoss() []int32 {
	if m != nil {
		return m.Qoss
	}
	return nil
}

func (m *SubscribeResp) GetIndex() [][]byte {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *SubscribeResp) GetRetainMessage() []*Message {
	if m != nil {
		return m.RetainMessage
	}
	return nil
}

type UnsubscribeReq struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Cookie               []byte   `protobuf:"bytes,2,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	Topics               []string `protobuf:"bytes,3,rep,name=Topics,proto3" json:"Topics,omitempty"`
	TraceID              string   `protobuf:"bytes,4,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Lost                 bool     `protobuf:"varint,5,opt,name=Lost,proto3" json:"Lost,omitempty"`
	Service              string   `protobuf:"bytes,6,opt,name=Service,proto3" json:"Service,omitempty"`
	CleanSession         bool     `protobuf:"varint,7,opt,name=CleanSession,proto3" json:"CleanSession,omitempty"`
	StatLabel            string   `protobuf:"bytes,8,opt,name=StatLabel,proto3" json:"StatLabel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeReq) Reset()         { *m = UnsubscribeReq{} }
func (m *UnsubscribeReq) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeReq) ProtoMessage()    {}
func (*UnsubscribeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{7}
}

func (m *UnsubscribeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeReq.Unmarshal(m, b)
}
func (m *UnsubscribeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeReq.Marshal(b, m, deterministic)
}
func (m *UnsubscribeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeReq.Merge(m, src)
}
func (m *UnsubscribeReq) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeReq.Size(m)
}
func (m *UnsubscribeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeReq proto.InternalMessageInfo

func (m *UnsubscribeReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *UnsubscribeReq) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *UnsubscribeReq) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *UnsubscribeReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *UnsubscribeReq) GetLost() bool {
	if m != nil {
		return m.Lost
	}
	return false
}

func (m *UnsubscribeReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *UnsubscribeReq) GetCleanSession() bool {
	if m != nil {
		return m.CleanSession
	}
	return false
}

func (m *UnsubscribeReq) GetStatLabel() string {
	if m != nil {
		return m.StatLabel
	}
	return ""
}

type UnsubscribeResp struct {
	Cookie               []byte   `protobuf:"bytes,1,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeResp) Reset()         { *m = UnsubscribeResp{} }
func (m *UnsubscribeResp) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeResp) ProtoMessage()    {}
func (*UnsubscribeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{8}
}

func (m *UnsubscribeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeResp.Unmarshal(m, b)
}
func (m *UnsubscribeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeResp.Marshal(b, m, deterministic)
}
func (m *UnsubscribeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeResp.Merge(m, src)
}
func (m *UnsubscribeResp) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeResp.Size(m)
}
func (m *UnsubscribeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeResp.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeResp proto.InternalMessageInfo

func (m *UnsubscribeResp) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

type PublishReq struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Cookie               []byte   `protobuf:"bytes,2,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	Message              *Message `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	Service              string   `protobuf:"bytes,4,opt,name=Service,proto3" json:"Service,omitempty"`
	StatLabel            string   `protobuf:"bytes,5,opt,name=StatLabel,proto3" json:"StatLabel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishReq) Reset()         { *m = PublishReq{} }
func (m *PublishReq) String() string { return proto.CompactTextString(m) }
func (*PublishReq) ProtoMessage()    {}
func (*PublishReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{9}
}

func (m *PublishReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishReq.Unmarshal(m, b)
}
func (m *PublishReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishReq.Marshal(b, m, deterministic)
}
func (m *PublishReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishReq.Merge(m, src)
}
func (m *PublishReq) XXX_Size() int {
	return xxx_messageInfo_PublishReq.Size(m)
}
func (m *PublishReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishReq.DiscardUnknown(m)
}

var xxx_messageInfo_PublishReq proto.InternalMessageInfo

func (m *PublishReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *PublishReq) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *PublishReq) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PublishReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *PublishReq) GetStatLabel() string {
	if m != nil {
		return m.StatLabel
	}
	return ""
}

type PublishResp struct {
	Cookie               []byte   `protobuf:"bytes,1,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishResp) Reset()         { *m = PublishResp{} }
func (m *PublishResp) String() string { return proto.CompactTextString(m) }
func (*PublishResp) ProtoMessage()    {}
func (*PublishResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{10}
}

func (m *PublishResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishResp.Unmarshal(m, b)
}
func (m *PublishResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishResp.Marshal(b, m, deterministic)
}
func (m *PublishResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishResp.Merge(m, src)
}
func (m *PublishResp) XXX_Size() int {
	return xxx_messageInfo_PublishResp.Size(m)
}
func (m *PublishResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishResp.DiscardUnknown(m)
}

var xxx_messageInfo_PublishResp proto.InternalMessageInfo

func (m *PublishResp) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

type PubrecReq struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Cookie               []byte   `protobuf:"bytes,2,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	MessageID            int64    `protobuf:"varint,3,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	TraceID              string   `protobuf:"bytes,4,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	GrpcAddress          string   `protobuf:"bytes,5,opt,name=GrpcAddress,proto3" json:"GrpcAddress,omitempty"`
	Service              string   `protobuf:"bytes,6,opt,name=Service,proto3" json:"Service,omitempty"`
	CleanSession         bool     `protobuf:"varint,7,opt,name=CleanSession,proto3" json:"CleanSession,omitempty"`
	StatLabel            string   `protobuf:"bytes,8,opt,name=StatLabel,proto3" json:"StatLabel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubrecReq) Reset()         { *m = PubrecReq{} }
func (m *PubrecReq) String() string { return proto.CompactTextString(m) }
func (*PubrecReq) ProtoMessage()    {}
func (*PubrecReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{11}
}

func (m *PubrecReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubrecReq.Unmarshal(m, b)
}
func (m *PubrecReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubrecReq.Marshal(b, m, deterministic)
}
func (m *PubrecReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubrecReq.Merge(m, src)
}
func (m *PubrecReq) XXX_Size() int {
	return xxx_messageInfo_PubrecReq.Size(m)
}
func (m *PubrecReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PubrecReq.DiscardUnknown(m)
}

var xxx_messageInfo_PubrecReq proto.InternalMessageInfo

func (m *PubrecReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *PubrecReq) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *PubrecReq) GetMessageID() int64 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *PubrecReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *PubrecReq) GetGrpcAddress() string {
	if m != nil {
		return m.GrpcAddress
	}
	return ""
}

func (m *PubrecReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *PubrecReq) GetCleanSession() bool {
	if m != nil {
		return m.CleanSession
	}
	return false
}

func (m *PubrecReq) GetStatLabel() string {
	if m != nil {
		return m.StatLabel
	}
	return ""
}

type PubrecResp struct {
	Cookie               []byte   `protobuf:"bytes,1,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubrecResp) Reset()         { *m = PubrecResp{} }
func (m *PubrecResp) String() string { return proto.CompactTextString(m) }
func (*PubrecResp) ProtoMessage()    {}
func (*PubrecResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{12}
}

func (m *PubrecResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubrecResp.Unmarshal(m, b)
}
func (m *PubrecResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubrecResp.Marshal(b, m, deterministic)
}
func (m *PubrecResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubrecResp.Merge(m, src)
}
func (m *PubrecResp) XXX_Size() int {
	return xxx_messageInfo_PubrecResp.Size(m)
}
func (m *PubrecResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PubrecResp.DiscardUnknown(m)
}

var xxx_messageInfo_PubrecResp proto.InternalMessageInfo

func (m *PubrecResp) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

type PubrelReq struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	MessageID            int64    `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	TraceID              string   `protobuf:"bytes,3,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Service              string   `protobuf:"bytes,4,opt,name=Service,proto3" json:"Service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubrelReq) Reset()         { *m = PubrelReq{} }
func (m *PubrelReq) String() string { return proto.CompactTextString(m) }
func (*PubrelReq) ProtoMessage()    {}
func (*PubrelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{13}
}

func (m *PubrelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubrelReq.Unmarshal(m, b)
}
func (m *PubrelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubrelReq.Marshal(b, m, deterministic)
}
func (m *PubrelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubrelReq.Merge(m, src)
}
func (m *PubrelReq) XXX_Size() int {
	return xxx_messageInfo_PubrelReq.Size(m)
}
func (m *PubrelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PubrelReq.DiscardUnknown(m)
}

var xxx_messageInfo_PubrelReq proto.InternalMessageInfo

func (m *PubrelReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *PubrelReq) GetMessageID() int64 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *PubrelReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *PubrelReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type PubrelResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubrelResp) Reset()         { *m = PubrelResp{} }
func (m *PubrelResp) String() string { return proto.CompactTextString(m) }
func (*PubrelResp) ProtoMessage()    {}
func (*PubrelResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{14}
}

func (m *PubrelResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubrelResp.Unmarshal(m, b)
}
func (m *PubrelResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubrelResp.Marshal(b, m, deterministic)
}
func (m *PubrelResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubrelResp.Merge(m, src)
}
func (m *PubrelResp) XXX_Size() int {
	return xxx_messageInfo_PubrelResp.Size(m)
}
func (m *PubrelResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PubrelResp.DiscardUnknown(m)
}

var xxx_messageInfo_PubrelResp proto.InternalMessageInfo

type PubcompReq struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	MessageID            int64    `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	TraceID              string   `protobuf:"bytes,3,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Service              string   `protobuf:"bytes,4,opt,name=Service,proto3" json:"Service,omitempty"`
	CleanSession         bool     `protobuf:"varint,5,opt,name=CleanSession,proto3" json:"CleanSession,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubcompReq) Reset()         { *m = PubcompReq{} }
func (m *PubcompReq) String() string { return proto.CompactTextString(m) }
func (*PubcompReq) ProtoMessage()    {}
func (*PubcompReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{15}
}

func (m *PubcompReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubcompReq.Unmarshal(m, b)
}
func (m *PubcompReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubcompReq.Marshal(b, m, deterministic)
}
func (m *PubcompReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubcompReq.Merge(m, src)
}
func (m *PubcompReq) XXX_Size() int {
	return xxx_messageInfo_PubcompReq.Size(m)
}
func (m *PubcompReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PubcompReq.DiscardUnknown(m)
}

var xxx_messageInfo_PubcompReq proto.InternalMessageInfo

func (m *PubcompReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *PubcompReq) GetMessageID() int64 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *PubcompReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *PubcompReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *PubcompReq) GetCleanSession() bool {
	if m != nil {
		return m.CleanSession
	}
	return false
}

type PubcompResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubcompResp) Reset()         { *m = PubcompResp{} }
func (m *PubcompResp) String() string { return proto.CompactTextString(m) }
func (*PubcompResp) ProtoMessage()    {}
func (*PubcompResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{16}
}

func (m *PubcompResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubcompResp.Unmarshal(m, b)
}
func (m *PubcompResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubcompResp.Marshal(b, m, deterministic)
}
func (m *PubcompResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubcompResp.Merge(m, src)
}
func (m *PubcompResp) XXX_Size() int {
	return xxx_messageInfo_PubcompResp.Size(m)
}
func (m *PubcompResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PubcompResp.DiscardUnknown(m)
}

var xxx_messageInfo_PubcompResp proto.InternalMessageInfo

type DelUnackReq struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Cookie               []byte   `protobuf:"bytes,2,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	MessageID            int64    `protobuf:"varint,3,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	TraceID              string   `protobuf:"bytes,4,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Service              string   `protobuf:"bytes,5,opt,name=Service,proto3" json:"Service,omitempty"`
	CleanSession         bool     `protobuf:"varint,6,opt,name=CleanSession,proto3" json:"CleanSession,omitempty"`
	StatLabel            string   `protobuf:"bytes,7,opt,name=StatLabel,proto3" json:"StatLabel,omitempty"`
	BizID                []byte   `protobuf:"bytes,8,opt,name=BizID,proto3" json:"BizID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelUnackReq) Reset()         { *m = DelUnackReq{} }
func (m *DelUnackReq) String() string { return proto.CompactTextString(m) }
func (*DelUnackReq) ProtoMessage()    {}
func (*DelUnackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{17}
}

func (m *DelUnackReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelUnackReq.Unmarshal(m, b)
}
func (m *DelUnackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelUnackReq.Marshal(b, m, deterministic)
}
func (m *DelUnackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelUnackReq.Merge(m, src)
}
func (m *DelUnackReq) XXX_Size() int {
	return xxx_messageInfo_DelUnackReq.Size(m)
}
func (m *DelUnackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelUnackReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelUnackReq proto.InternalMessageInfo

func (m *DelUnackReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *DelUnackReq) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *DelUnackReq) GetMessageID() int64 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *DelUnackReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *DelUnackReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *DelUnackReq) GetCleanSession() bool {
	if m != nil {
		return m.CleanSession
	}
	return false
}

func (m *DelUnackReq) GetStatLabel() string {
	if m != nil {
		return m.StatLabel
	}
	return ""
}

func (m *DelUnackReq) GetBizID() []byte {
	if m != nil {
		return m.BizID
	}
	return nil
}

type DelUnackResp struct {
	Cookie               []byte   `protobuf:"bytes,1,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	BizID                []byte   `protobuf:"bytes,2,opt,name=BizID,proto3" json:"BizID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelUnackResp) Reset()         { *m = DelUnackResp{} }
func (m *DelUnackResp) String() string { return proto.CompactTextString(m) }
func (*DelUnackResp) ProtoMessage()    {}
func (*DelUnackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{18}
}

func (m *DelUnackResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelUnackResp.Unmarshal(m, b)
}
func (m *DelUnackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelUnackResp.Marshal(b, m, deterministic)
}
func (m *DelUnackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelUnackResp.Merge(m, src)
}
func (m *DelUnackResp) XXX_Size() int {
	return xxx_messageInfo_DelUnackResp.Size(m)
}
func (m *DelUnackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DelUnackResp.DiscardUnknown(m)
}

var xxx_messageInfo_DelUnackResp proto.InternalMessageInfo

func (m *DelUnackResp) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *DelUnackResp) GetBizID() []byte {
	if m != nil {
		return m.BizID
	}
	return nil
}

// Pushd从指定Topic的指定位置Index返回至多Count条消息。
type PullReq struct {
	TraceID              string   `protobuf:"bytes,1,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Offset               []byte   `protobuf:"bytes,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit                int64    `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Service              string   `protobuf:"bytes,5,opt,name=Service,proto3" json:"Service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullReq) Reset()         { *m = PullReq{} }
func (m *PullReq) String() string { return proto.CompactTextString(m) }
func (*PullReq) ProtoMessage()    {}
func (*PullReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{19}
}

func (m *PullReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullReq.Unmarshal(m, b)
}
func (m *PullReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullReq.Marshal(b, m, deterministic)
}
func (m *PullReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullReq.Merge(m, src)
}
func (m *PullReq) XXX_Size() int {
	return xxx_messageInfo_PullReq.Size(m)
}
func (m *PullReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PullReq.DiscardUnknown(m)
}

var xxx_messageInfo_PullReq proto.InternalMessageInfo

func (m *PullReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *PullReq) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PullReq) GetOffset() []byte {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *PullReq) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PullReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

// Index是下次拉取时的需要指定的Index。
// 例如：
//     PullReq中设置Index为5， Count为10，但是
//     pushd仅返回了8条消息，则PullResp中Index
//     的值为13，即第8条消息的下一条。
// PacketID也是同样的逻辑。
// 即，PullResp中返回的Index和PacketID就是下次
// PullReq中的Index和PacketID。
type PullResp struct {
	Messages             []*Message `protobuf:"bytes,1,rep,name=Messages,proto3" json:"Messages,omitempty"`
	Offset               []byte     `protobuf:"bytes,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Complete             bool       `protobuf:"varint,3,opt,name=Complete,proto3" json:"Complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PullResp) Reset()         { *m = PullResp{} }
func (m *PullResp) String() string { return proto.CompactTextString(m) }
func (*PullResp) ProtoMessage()    {}
func (*PullResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{20}
}

func (m *PullResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullResp.Unmarshal(m, b)
}
func (m *PullResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullResp.Marshal(b, m, deterministic)
}
func (m *PullResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullResp.Merge(m, src)
}
func (m *PullResp) XXX_Size() int {
	return xxx_messageInfo_PullResp.Size(m)
}
func (m *PullResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PullResp.DiscardUnknown(m)
}

var xxx_messageInfo_PullResp proto.InternalMessageInfo

func (m *PullResp) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *PullResp) GetOffset() []byte {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *PullResp) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

type Message struct {
	Topic                string   `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Qos                  int32    `protobuf:"varint,2,opt,name=Qos,proto3" json:"Qos,omitempty"`
	MessageID            int64    `protobuf:"varint,3,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Payload              []byte   `protobuf:"bytes,4,opt,name=Payload,proto3" json:"Payload,omitempty"`
	TraceID              string   `protobuf:"bytes,5,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Retain               bool     `protobuf:"varint,6,opt,name=Retain,proto3" json:"Retain,omitempty"`
	BizID                []byte   `protobuf:"bytes,7,opt,name=BizID,proto3" json:"BizID,omitempty"`
	Index                []byte   `protobuf:"bytes,8,opt,name=Index,proto3" json:"Index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{21}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Message) GetQos() int32 {
	if m != nil {
		return m.Qos
	}
	return 0
}

func (m *Message) GetMessageID() int64 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *Message) GetRetain() bool {
	if m != nil {
		return m.Retain
	}
	return false
}

func (m *Message) GetBizID() []byte {
	if m != nil {
		return m.BizID
	}
	return nil
}

func (m *Message) GetIndex() []byte {
	if m != nil {
		return m.Index
	}
	return nil
}

type UnackDesc struct {
	Topic                string   `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Index                []byte   `protobuf:"bytes,2,opt,name=Index,proto3" json:"Index,omitempty"`
	MessageID            int64    `protobuf:"varint,3,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	BizID                []byte   `protobuf:"bytes,4,opt,name=BizID,proto3" json:"BizID,omitempty"`
	TraceID              string   `protobuf:"bytes,5,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Payload              []byte   `protobuf:"bytes,6,opt,name=Payload,proto3" json:"Payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnackDesc) Reset()         { *m = UnackDesc{} }
func (m *UnackDesc) String() string { return proto.CompactTextString(m) }
func (*UnackDesc) ProtoMessage()    {}
func (*UnackDesc) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{22}
}

func (m *UnackDesc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnackDesc.Unmarshal(m, b)
}
func (m *UnackDesc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnackDesc.Marshal(b, m, deterministic)
}
func (m *UnackDesc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnackDesc.Merge(m, src)
}
func (m *UnackDesc) XXX_Size() int {
	return xxx_messageInfo_UnackDesc.Size(m)
}
func (m *UnackDesc) XXX_DiscardUnknown() {
	xxx_messageInfo_UnackDesc.DiscardUnknown(m)
}

var xxx_messageInfo_UnackDesc proto.InternalMessageInfo

func (m *UnackDesc) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *UnackDesc) GetIndex() []byte {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *UnackDesc) GetMessageID() int64 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *UnackDesc) GetBizID() []byte {
	if m != nil {
		return m.BizID
	}
	return nil
}

func (m *UnackDesc) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *UnackDesc) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type RangeUnackReq struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	TraceID              string   `protobuf:"bytes,2,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset               []byte   `protobuf:"bytes,4,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Service              string   `protobuf:"bytes,5,opt,name=Service,proto3" json:"Service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RangeUnackReq) Reset()         { *m = RangeUnackReq{} }
func (m *RangeUnackReq) String() string { return proto.CompactTextString(m) }
func (*RangeUnackReq) ProtoMessage()    {}
func (*RangeUnackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{23}
}

func (m *RangeUnackReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeUnackReq.Unmarshal(m, b)
}
func (m *RangeUnackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeUnackReq.Marshal(b, m, deterministic)
}
func (m *RangeUnackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeUnackReq.Merge(m, src)
}
func (m *RangeUnackReq) XXX_Size() int {
	return xxx_messageInfo_RangeUnackReq.Size(m)
}
func (m *RangeUnackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeUnackReq.DiscardUnknown(m)
}

var xxx_messageInfo_RangeUnackReq proto.InternalMessageInfo

func (m *RangeUnackReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *RangeUnackReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *RangeUnackReq) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RangeUnackReq) GetOffset() []byte {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *RangeUnackReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type RangeUnackResp struct {
	Offset               []byte       `protobuf:"bytes,1,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Complete             bool         `protobuf:"varint,2,opt,name=Complete,proto3" json:"Complete,omitempty"`
	Messages             []*UnackDesc `protobuf:"bytes,3,rep,name=Messages,proto3" json:"Messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RangeUnackResp) Reset()         { *m = RangeUnackResp{} }
func (m *RangeUnackResp) String() string { return proto.CompactTextString(m) }
func (*RangeUnackResp) ProtoMessage()    {}
func (*RangeUnackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{24}
}

func (m *RangeUnackResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeUnackResp.Unmarshal(m, b)
}
func (m *RangeUnackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeUnackResp.Marshal(b, m, deterministic)
}
func (m *RangeUnackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeUnackResp.Merge(m, src)
}
func (m *RangeUnackResp) XXX_Size() int {
	return xxx_messageInfo_RangeUnackResp.Size(m)
}
func (m *RangeUnackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeUnackResp.DiscardUnknown(m)
}

var xxx_messageInfo_RangeUnackResp proto.InternalMessageInfo

func (m *RangeUnackResp) GetOffset() []byte {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *RangeUnackResp) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

func (m *RangeUnackResp) GetMessages() []*UnackDesc {
	if m != nil {
		return m.Messages
	}
	return nil
}

type PutUnackReq struct {
	TraceID              string       `protobuf:"bytes,1,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	ClientID             string       `protobuf:"bytes,2,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Messages             []*UnackDesc `protobuf:"bytes,3,rep,name=Messages,proto3" json:"Messages,omitempty"`
	Service              string       `protobuf:"bytes,4,opt,name=Service,proto3" json:"Service,omitempty"`
	CleanSession         bool         `protobuf:"varint,5,opt,name=CleanSession,proto3" json:"CleanSession,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PutUnackReq) Reset()         { *m = PutUnackReq{} }
func (m *PutUnackReq) String() string { return proto.CompactTextString(m) }
func (*PutUnackReq) ProtoMessage()    {}
func (*PutUnackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{25}
}

func (m *PutUnackReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutUnackReq.Unmarshal(m, b)
}
func (m *PutUnackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutUnackReq.Marshal(b, m, deterministic)
}
func (m *PutUnackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutUnackReq.Merge(m, src)
}
func (m *PutUnackReq) XXX_Size() int {
	return xxx_messageInfo_PutUnackReq.Size(m)
}
func (m *PutUnackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PutUnackReq.DiscardUnknown(m)
}

var xxx_messageInfo_PutUnackReq proto.InternalMessageInfo

func (m *PutUnackReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *PutUnackReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *PutUnackReq) GetMessages() []*UnackDesc {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *PutUnackReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *PutUnackReq) GetCleanSession() bool {
	if m != nil {
		return m.CleanSession
	}
	return false
}

type PutUnackResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutUnackResp) Reset()         { *m = PutUnackResp{} }
func (m *PutUnackResp) String() string { return proto.CompactTextString(m) }
func (*PutUnackResp) ProtoMessage()    {}
func (*PutUnackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{26}
}

func (m *PutUnackResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutUnackResp.Unmarshal(m, b)
}
func (m *PutUnackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutUnackResp.Marshal(b, m, deterministic)
}
func (m *PutUnackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutUnackResp.Merge(m, src)
}
func (m *PutUnackResp) XXX_Size() int {
	return xxx_messageInfo_PutUnackResp.Size(m)
}
func (m *PutUnackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PutUnackResp.DiscardUnknown(m)
}

var xxx_messageInfo_PutUnackResp proto.InternalMessageInfo

type PostSubscribeReq struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Cookie               []byte   `protobuf:"bytes,2,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	TraceID              string   `protobuf:"bytes,3,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Service              string   `protobuf:"bytes,4,opt,name=Service,proto3" json:"Service,omitempty"`
	Topics               []string `protobuf:"bytes,5,rep,name=Topics,proto3" json:"Topics,omitempty"`
	Qoss                 []int32  `protobuf:"varint,6,rep,packed,name=Qoss,proto3" json:"Qoss,omitempty"`
	StatLabel            string   `protobuf:"bytes,7,opt,name=StatLabel,proto3" json:"StatLabel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostSubscribeReq) Reset()         { *m = PostSubscribeReq{} }
func (m *PostSubscribeReq) String() string { return proto.CompactTextString(m) }
func (*PostSubscribeReq) ProtoMessage()    {}
func (*PostSubscribeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{27}
}

func (m *PostSubscribeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostSubscribeReq.Unmarshal(m, b)
}
func (m *PostSubscribeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostSubscribeReq.Marshal(b, m, deterministic)
}
func (m *PostSubscribeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostSubscribeReq.Merge(m, src)
}
func (m *PostSubscribeReq) XXX_Size() int {
	return xxx_messageInfo_PostSubscribeReq.Size(m)
}
func (m *PostSubscribeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PostSubscribeReq.DiscardUnknown(m)
}

var xxx_messageInfo_PostSubscribeReq proto.InternalMessageInfo

func (m *PostSubscribeReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *PostSubscribeReq) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *PostSubscribeReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *PostSubscribeReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *PostSubscribeReq) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *PostSubscribeReq) GetQoss() []int32 {
	if m != nil {
		return m.Qoss
	}
	return nil
}

func (m *PostSubscribeReq) GetStatLabel() string {
	if m != nil {
		return m.StatLabel
	}
	return ""
}

type PostSubscribeResp struct {
	Cookie               []byte   `protobuf:"bytes,1,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostSubscribeResp) Reset()         { *m = PostSubscribeResp{} }
func (m *PostSubscribeResp) String() string { return proto.CompactTextString(m) }
func (*PostSubscribeResp) ProtoMessage()    {}
func (*PostSubscribeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{28}
}

func (m *PostSubscribeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostSubscribeResp.Unmarshal(m, b)
}
func (m *PostSubscribeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostSubscribeResp.Marshal(b, m, deterministic)
}
func (m *PostSubscribeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostSubscribeResp.Merge(m, src)
}
func (m *PostSubscribeResp) XXX_Size() int {
	return xxx_messageInfo_PostSubscribeResp.Size(m)
}
func (m *PostSubscribeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PostSubscribeResp.DiscardUnknown(m)
}

var xxx_messageInfo_PostSubscribeResp proto.InternalMessageInfo

func (m *PostSubscribeResp) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

type AddRouteReq struct {
	TraceID              string   `protobuf:"bytes,1,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`
	Topic                string   `protobuf:"bytes,3,opt,name=Topic,proto3" json:"Topic,omitempty"`
	GrpcAddress          string   `protobuf:"bytes,4,opt,name=GrpcAddress,proto3" json:"GrpcAddress,omitempty"`
	Version              uint64   `protobuf:"varint,5,opt,name=Version,proto3" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRouteReq) Reset()         { *m = AddRouteReq{} }
func (m *AddRouteReq) String() string { return proto.CompactTextString(m) }
func (*AddRouteReq) ProtoMessage()    {}
func (*AddRouteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{29}
}

func (m *AddRouteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRouteReq.Unmarshal(m, b)
}
func (m *AddRouteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRouteReq.Marshal(b, m, deterministic)
}
func (m *AddRouteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRouteReq.Merge(m, src)
}
func (m *AddRouteReq) XXX_Size() int {
	return xxx_messageInfo_AddRouteReq.Size(m)
}
func (m *AddRouteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRouteReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddRouteReq proto.InternalMessageInfo

func (m *AddRouteReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *AddRouteReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *AddRouteReq) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *AddRouteReq) GetGrpcAddress() string {
	if m != nil {
		return m.GrpcAddress
	}
	return ""
}

func (m *AddRouteReq) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type AddRouteResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRouteResp) Reset()         { *m = AddRouteResp{} }
func (m *AddRouteResp) String() string { return proto.CompactTextString(m) }
func (*AddRouteResp) ProtoMessage()    {}
func (*AddRouteResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{30}
}

func (m *AddRouteResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRouteResp.Unmarshal(m, b)
}
func (m *AddRouteResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRouteResp.Marshal(b, m, deterministic)
}
func (m *AddRouteResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRouteResp.Merge(m, src)
}
func (m *AddRouteResp) XXX_Size() int {
	return xxx_messageInfo_AddRouteResp.Size(m)
}
func (m *AddRouteResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRouteResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddRouteResp proto.InternalMessageInfo

type RemoveRouteReq struct {
	TraceID              string   `protobuf:"bytes,1,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`
	Topic                string   `protobuf:"bytes,3,opt,name=Topic,proto3" json:"Topic,omitempty"`
	GrpcAddress          string   `protobuf:"bytes,4,opt,name=GrpcAddress,proto3" json:"GrpcAddress,omitempty"`
	Version              uint64   `protobuf:"varint,5,opt,name=Version,proto3" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRouteReq) Reset()         { *m = RemoveRouteReq{} }
func (m *RemoveRouteReq) String() string { return proto.CompactTextString(m) }
func (*RemoveRouteReq) ProtoMessage()    {}
func (*RemoveRouteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{31}
}

func (m *RemoveRouteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRouteReq.Unmarshal(m, b)
}
func (m *RemoveRouteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRouteReq.Marshal(b, m, deterministic)
}
func (m *RemoveRouteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRouteReq.Merge(m, src)
}
func (m *RemoveRouteReq) XXX_Size() int {
	return xxx_messageInfo_RemoveRouteReq.Size(m)
}
func (m *RemoveRouteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRouteReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRouteReq proto.InternalMessageInfo

func (m *RemoveRouteReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *RemoveRouteReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *RemoveRouteReq) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *RemoveRouteReq) GetGrpcAddress() string {
	if m != nil {
		return m.GrpcAddress
	}
	return ""
}

func (m *RemoveRouteReq) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type RemoveRouteResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRouteResp) Reset()         { *m = RemoveRouteResp{} }
func (m *RemoveRouteResp) String() string { return proto.CompactTextString(m) }
func (*RemoveRouteResp) ProtoMessage()    {}
func (*RemoveRouteResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1e4bfd2e9d102bb, []int{32}
}

func (m *RemoveRouteResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRouteResp.Unmarshal(m, b)
}
func (m *RemoveRouteResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRouteResp.Marshal(b, m, deterministic)
}
func (m *RemoveRouteResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRouteResp.Merge(m, src)
}
func (m *RemoveRouteResp) XXX_Size() int {
	return xxx_messageInfo_RemoveRouteResp.Size(m)
}
func (m *RemoveRouteResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRouteResp.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRouteResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ConnectReq)(nil), "push.ConnectReq")
	proto.RegisterType((*Record)(nil), "push.Record")
	proto.RegisterType((*ConnectResp)(nil), "push.ConnectResp")
	proto.RegisterType((*DisconnectReq)(nil), "push.DisconnectReq")
	proto.RegisterType((*DisconnectResp)(nil), "push.DisconnectResp")
	proto.RegisterType((*SubscribeReq)(nil), "push.SubscribeReq")
	proto.RegisterType((*SubscribeResp)(nil), "push.SubscribeResp")
	proto.RegisterType((*UnsubscribeReq)(nil), "push.UnsubscribeReq")
	proto.RegisterType((*UnsubscribeResp)(nil), "push.UnsubscribeResp")
	proto.RegisterType((*PublishReq)(nil), "push.PublishReq")
	proto.RegisterType((*PublishResp)(nil), "push.PublishResp")
	proto.RegisterType((*PubrecReq)(nil), "push.PubrecReq")
	proto.RegisterType((*PubrecResp)(nil), "push.PubrecResp")
	proto.RegisterType((*PubrelReq)(nil), "push.PubrelReq")
	proto.RegisterType((*PubrelResp)(nil), "push.PubrelResp")
	proto.RegisterType((*PubcompReq)(nil), "push.PubcompReq")
	proto.RegisterType((*PubcompResp)(nil), "push.PubcompResp")
	proto.RegisterType((*DelUnackReq)(nil), "push.DelUnackReq")
	proto.RegisterType((*DelUnackResp)(nil), "push.DelUnackResp")
	proto.RegisterType((*PullReq)(nil), "push.PullReq")
	proto.RegisterType((*PullResp)(nil), "push.PullResp")
	proto.RegisterType((*Message)(nil), "push.Message")
	proto.RegisterType((*UnackDesc)(nil), "push.UnackDesc")
	proto.RegisterType((*RangeUnackReq)(nil), "push.RangeUnackReq")
	proto.RegisterType((*RangeUnackResp)(nil), "push.RangeUnackResp")
	proto.RegisterType((*PutUnackReq)(nil), "push.PutUnackReq")
	proto.RegisterType((*PutUnackResp)(nil), "push.PutUnackResp")
	proto.RegisterType((*PostSubscribeReq)(nil), "push.PostSubscribeReq")
	proto.RegisterType((*PostSubscribeResp)(nil), "push.PostSubscribeResp")
	proto.RegisterType((*AddRouteReq)(nil), "push.AddRouteReq")
	proto.RegisterType((*AddRouteResp)(nil), "push.AddRouteResp")
	proto.RegisterType((*RemoveRouteReq)(nil), "push.RemoveRouteReq")
	proto.RegisterType((*RemoveRouteResp)(nil), "push.RemoveRouteResp")
}

func init() { proto.RegisterFile("push.proto", fileDescriptor_d1e4bfd2e9d102bb) }

var fileDescriptor_d1e4bfd2e9d102bb = []byte{
	// 1348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xcd, 0x6f, 0x1b, 0x45,
	0x14, 0xcf, 0x7e, 0xf9, 0xe3, 0xd9, 0x4e, 0xd2, 0x69, 0x08, 0x2b, 0x8b, 0x83, 0x35, 0x2a, 0xad,
	0xab, 0x8a, 0xaa, 0x6a, 0x11, 0x12, 0x52, 0x2f, 0x6d, 0x22, 0xa1, 0x4a, 0xa9, 0x70, 0x27, 0x29,
	0xf7, 0xcd, 0x7a, 0xda, 0xae, 0xb2, 0xd9, 0xdd, 0xee, 0xac, 0x4b, 0xcb, 0x8d, 0x0b, 0x37, 0x4e,
	0x48, 0x1c, 0x41, 0x48, 0x48, 0xdc, 0xf8, 0x07, 0xb8, 0x22, 0xf1, 0x8f, 0x20, 0x38, 0x70, 0xe6,
	0x8e, 0x76, 0x3e, 0x76, 0x67, 0xd6, 0xf6, 0x26, 0xa4, 0xb4, 0xe2, 0xe6, 0xf7, 0x66, 0xc6, 0xf3,
	0xde, 0xef, 0xfd, 0xde, 0x9b, 0x9f, 0x0d, 0x90, 0x2d, 0xd8, 0xb3, 0x9b, 0x59, 0x9e, 0x16, 0x29,
	0x72, 0xcb, 0xcf, 0xf8, 0x47, 0x1b, 0x60, 0x2f, 0x4d, 0x12, 0x1a, 0x16, 0x84, 0x3e, 0x47, 0x63,
	0xe8, 0xed, 0xc5, 0x11, 0x4d, 0x8a, 0x07, 0xfb, 0xbe, 0x35, 0xb1, 0xa6, 0x7d, 0x52, 0xd9, 0xe5,
	0xda, 0x63, 0x46, 0xf3, 0x24, 0x38, 0xa5, 0xbe, 0x2d, 0xd6, 0x94, 0x5d, 0xae, 0xcd, 0x02, 0xc6,
	0x3e, 0x4f, 0xf3, 0xb9, 0xef, 0x4c, 0xac, 0xe9, 0x90, 0x54, 0x36, 0xc2, 0x30, 0xdc, 0x8b, 0x69,
	0x90, 0x1c, 0x52, 0xc6, 0xa2, 0x34, 0xf1, 0xdd, 0x89, 0x35, 0xed, 0x11, 0xc3, 0x87, 0x26, 0x30,
	0xf8, 0x24, 0xcf, 0xc2, 0x7b, 0xf3, 0x79, 0x4e, 0x19, 0xf3, 0x3d, 0xfe, 0xf5, 0xba, 0x0b, 0xf9,
	0xd0, 0x3d, 0xca, 0x83, 0x90, 0x3e, 0xd8, 0xf7, 0x3b, 0x7c, 0x55, 0x99, 0xe8, 0x0a, 0x8c, 0x44,
	0x8c, 0xea, 0x74, 0x97, 0xaf, 0x9b, 0x4e, 0x1e, 0x85, 0xc8, 0x33, 0x4a, 0x93, 0x07, 0xfb, 0x7e,
	0x6f, 0x62, 0x4d, 0x1d, 0x62, 0xf8, 0xca, 0x3b, 0x0e, 0x69, 0xfe, 0x22, 0x0a, 0xa9, 0xdf, 0x17,
	0x77, 0x48, 0x13, 0xbf, 0x84, 0x0e, 0xa1, 0x61, 0x99, 0xcd, 0x0e, 0x78, 0x47, 0x69, 0x16, 0x85,
	0x12, 0x1e, 0x61, 0xa0, 0x6d, 0x70, 0x1e, 0xa5, 0x8c, 0xc3, 0xe2, 0x91, 0xf2, 0x23, 0xbf, 0x6f,
	0x91, 0xe7, 0x25, 0x74, 0xc9, 0x9c, 0xbe, 0x94, 0xa8, 0x18, 0xbe, 0x72, 0xcf, 0x41, 0xc0, 0x0a,
	0xca, 0xe4, 0x1e, 0x57, 0xec, 0xd1, 0x7d, 0xf8, 0x4f, 0x0b, 0x06, 0x55, 0x81, 0x58, 0x86, 0x76,
	0xa1, 0xb3, 0x97, 0xa6, 0x27, 0x11, 0xe5, 0x01, 0x0c, 0x89, 0xb4, 0xd0, 0x55, 0xd8, 0x94, 0x60,
	0xce, 0x72, 0xca, 0x68, 0x52, 0xf0, 0x60, 0x7a, 0xa4, 0xe1, 0x45, 0x57, 0xa1, 0x2b, 0x32, 0x61,
	0xbe, 0x33, 0x71, 0xa6, 0x83, 0xdb, 0xc3, 0x9b, 0x9c, 0x14, 0xc2, 0x49, 0xd4, 0x22, 0x7a, 0x0f,
	0xfa, 0x87, 0x45, 0x50, 0x1c, 0x04, 0xc7, 0x34, 0xe6, 0x81, 0xf5, 0x49, 0xed, 0x28, 0xeb, 0xfd,
	0xf0, 0x79, 0x51, 0xec, 0xa5, 0x73, 0xca, 0x8b, 0xe5, 0x91, 0xca, 0x2e, 0x4f, 0x3e, 0xa4, 0x8c,
	0x05, 0x4f, 0x55, 0xad, 0x1c, 0x52, 0x3b, 0x74, 0x8c, 0xbb, 0x26, 0xc6, 0x3f, 0xd9, 0x30, 0xda,
	0x8f, 0x58, 0x78, 0x3e, 0x36, 0xd6, 0x38, 0xd8, 0x06, 0x0e, 0x0d, 0x26, 0x39, 0xcb, 0x4c, 0x3a,
	0x0f, 0x1f, 0x35, 0xb6, 0x79, 0x26, 0xdb, 0x10, 0xb8, 0x07, 0x29, 0x2b, 0x78, 0x62, 0x3d, 0xc2,
	0x3f, 0xaf, 0xcf, 0xc9, 0x44, 0xb1, 0xd7, 0x44, 0xb1, 0xc9, 0xc9, 0xfe, 0x0a, 0x4e, 0x22, 0x70,
	0x4f, 0xa2, 0xf0, 0xc4, 0x07, 0x71, 0x5f, 0xf9, 0x19, 0x6f, 0xc3, 0xa6, 0x0e, 0x14, 0xcb, 0xf0,
	0xef, 0x16, 0x0c, 0x0f, 0x17, 0xc7, 0x2c, 0xcc, 0xa3, 0x63, 0x7a, 0x51, 0xe8, 0x76, 0xa1, 0xc3,
	0xd9, 0x2c, 0x98, 0xd1, 0x27, 0xd2, 0x2a, 0x43, 0x78, 0x94, 0x32, 0xe6, 0xbb, 0x13, 0x67, 0xea,
	0x11, 0xfe, 0xb9, 0x05, 0x20, 0x0d, 0x8c, 0x8e, 0x09, 0x46, 0x13, 0xf8, 0xee, 0x0a, 0xe0, 0x5b,
	0x01, 0xc3, 0x5f, 0x59, 0x30, 0xd2, 0xd2, 0x6c, 0x69, 0x07, 0x15, 0xb3, 0xad, 0xc5, 0xbc, 0x03,
	0x9e, 0xea, 0x45, 0x67, 0x3a, 0x24, 0xc2, 0x40, 0x77, 0x60, 0x44, 0x68, 0x11, 0x44, 0x89, 0xe4,
	0x28, 0x4f, 0x73, 0x70, 0x7b, 0x24, 0xda, 0x42, 0x3a, 0x89, 0xb9, 0x07, 0xff, 0x61, 0xc1, 0xe6,
	0xe3, 0x84, 0xbd, 0x29, 0xc4, 0x35, 0x74, 0xdd, 0xd5, 0xf4, 0xf3, 0x56, 0xd3, 0xef, 0x3f, 0x47,
	0xfc, 0x3a, 0x6c, 0x19, 0x79, 0xae, 0x87, 0x1c, 0xff, 0x60, 0x01, 0xcc, 0x16, 0xc7, 0x71, 0xc4,
	0x9e, 0x5d, 0x14, 0x8f, 0x6b, 0xd0, 0x55, 0x55, 0x28, 0x1b, 0x77, 0xa9, 0x0a, 0x6a, 0x55, 0x4f,
	0xd9, 0x6d, 0xe9, 0x38, 0xaf, 0x99, 0xce, 0xfb, 0x30, 0xa8, 0x42, 0x6c, 0x49, 0xe5, 0x6f, 0x0b,
	0xfa, 0xb3, 0xc5, 0x71, 0x4e, 0xc3, 0x8b, 0x66, 0x62, 0x0c, 0x41, 0x67, 0xc5, 0x10, 0x5c, 0x53,
	0xdf, 0x73, 0x3d, 0x84, 0x6f, 0xac, 0xda, 0x57, 0x78, 0x05, 0x79, 0xda, 0x2d, 0xe8, 0xbc, 0x92,
	0xe0, 0xc4, 0x67, 0x81, 0x63, 0x80, 0x60, 0xb7, 0x80, 0xe0, 0xac, 0x1d, 0x21, 0x66, 0x75, 0xf1,
	0x50, 0x06, 0x18, 0xf3, 0xa9, 0xf7, 0x9d, 0x60, 0x5c, 0x98, 0x9e, 0x66, 0x6f, 0x3d, 0x94, 0x25,
	0xb4, 0xbd, 0x65, 0xb4, 0xf1, 0x88, 0xd3, 0x4d, 0xc4, 0xc7, 0x32, 0xfc, 0x97, 0x05, 0x83, 0x7d,
	0x1a, 0x3f, 0x4e, 0x82, 0xf0, 0xe4, 0x6d, 0x13, 0x4b, 0x4b, 0xc4, 0x6b, 0x4f, 0xa4, 0x73, 0x16,
	0x6d, 0xba, 0xcd, 0x77, 0x6c, 0x07, 0xbc, 0xfb, 0xd1, 0x17, 0x52, 0x54, 0x0d, 0x89, 0x30, 0xf0,
	0x5d, 0x18, 0xd6, 0xc9, 0xb6, 0x8c, 0xea, 0xea, 0xb4, 0xad, 0x9f, 0xfe, 0xd2, 0x82, 0xee, 0x6c,
	0x11, 0x73, 0x8e, 0x69, 0x59, 0x59, 0x66, 0x56, 0x95, 0x1a, 0xb3, 0x75, 0x35, 0xb6, 0x0b, 0x9d,
	0x4f, 0x9f, 0x3c, 0x61, 0xb4, 0x90, 0xaa, 0x4b, 0x5a, 0xe5, 0xee, 0x83, 0xe8, 0x34, 0x2a, 0x38,
	0x36, 0x0e, 0x11, 0xc6, 0x7a, 0x64, 0x70, 0x04, 0x3d, 0x11, 0x02, 0xcb, 0xd0, 0x75, 0xe8, 0x49,
	0x98, 0x99, 0x6f, 0xad, 0x7a, 0x21, 0xaa, 0x65, 0xed, 0x7a, 0xdb, 0xb8, 0xbe, 0x2c, 0x77, 0x7a,
	0x9a, 0xc5, 0xb4, 0x10, 0xe3, 0xad, 0x47, 0x2a, 0x1b, 0xff, 0x66, 0x55, 0xa3, 0xef, 0xdc, 0x12,
	0xf3, 0x4c, 0x2a, 0xcc, 0x82, 0x57, 0x71, 0x1a, 0xcc, 0xa5, 0xae, 0x54, 0x66, 0xcb, 0xdb, 0xbd,
	0x5b, 0xca, 0xdc, 0xf2, 0x9d, 0x93, 0x24, 0x90, 0x56, 0x5d, 0xa2, 0xae, 0x56, 0xa2, 0xfa, 0x3d,
	0x95, 0x65, 0x17, 0x82, 0xf5, 0x7b, 0x0b, 0xfa, 0xbc, 0xe8, 0xfb, 0x94, 0x85, 0x6b, 0x72, 0xa9,
	0x4e, 0xda, 0xda, 0xc9, 0x33, 0xf2, 0xa9, 0x62, 0x70, 0xf5, 0x18, 0x5a, 0x75, 0x88, 0xca, 0xbf,
	0x63, 0xe4, 0x8f, 0xbf, 0xb6, 0x60, 0x44, 0x82, 0xe4, 0x29, 0x3d, 0x57, 0x23, 0x6a, 0x37, 0xd8,
	0x4b, 0xe4, 0x13, 0x74, 0x72, 0x74, 0x3a, 0xd5, 0xd5, 0x77, 0x8d, 0xea, 0xaf, 0xa7, 0xd9, 0x73,
	0xd8, 0xd4, 0xc3, 0x11, 0xad, 0x22, 0xbf, 0xc3, 0x5a, 0xcb, 0x20, 0xdb, 0x64, 0x10, 0xba, 0xa1,
	0x11, 0x54, 0x28, 0xfb, 0x2d, 0x41, 0xd0, 0xaa, 0x18, 0x35, 0x45, 0xf1, 0xcf, 0x56, 0x39, 0x99,
	0x8a, 0x0a, 0x80, 0xf5, 0x1d, 0xa6, 0x43, 0x63, 0x37, 0xa0, 0xf9, 0x37, 0x57, 0xbe, 0xe6, 0x24,
	0xdd, 0x84, 0x61, 0x1d, 0x2f, 0xcb, 0xf0, 0xaf, 0x16, 0x6c, 0xcf, 0x52, 0x56, 0xbc, 0xb6, 0xe8,
	0xbd, 0xc8, 0xe8, 0xaf, 0x65, 0x9b, 0xb7, 0x52, 0x28, 0x77, 0x34, 0xd1, 0xd9, 0x3a, 0x39, 0xf1,
	0x0d, 0xb8, 0xd4, 0xc8, 0xa2, 0xe5, 0xdd, 0xfd, 0xc6, 0x82, 0xc1, 0xbd, 0xf9, 0x9c, 0xa4, 0x8b,
	0x82, 0xb6, 0x17, 0x4d, 0x0b, 0xdd, 0x36, 0x43, 0xaf, 0xfa, 0xd1, 0xd1, 0xfb, 0xb1, 0xa1, 0x3a,
	0xdc, 0x95, 0xaa, 0xe3, 0x33, 0x9a, 0x57, 0xe5, 0x71, 0x89, 0x32, 0xcb, 0xca, 0xd4, 0x41, 0xb1,
	0x0c, 0x7f, 0x6b, 0xc1, 0x26, 0xa1, 0xa7, 0xe9, 0x0b, 0xfa, 0x3f, 0x0b, 0xf4, 0x12, 0x6c, 0x19,
	0x71, 0xb1, 0xec, 0xf6, 0x2f, 0x9d, 0xb2, 0x0d, 0xd8, 0x33, 0x75, 0xe9, 0x2d, 0xe8, 0xca, 0x1f,
	0x5f, 0x68, 0x5b, 0x30, 0xb9, 0xfe, 0x6f, 0x64, 0x7c, 0xa9, 0xe1, 0x61, 0x19, 0xde, 0x40, 0x1f,
	0x03, 0xd4, 0x3f, 0xc5, 0xd0, 0x65, 0xb1, 0xc5, 0xf8, 0x15, 0x3b, 0xde, 0x59, 0x76, 0xf2, 0xa3,
	0x1f, 0x41, 0xbf, 0xaa, 0x3b, 0x42, 0x62, 0x93, 0x4e, 0xe7, 0xf1, 0xe5, 0x25, 0x1f, 0x3f, 0x77,
	0x17, 0x06, 0x9a, 0x24, 0x47, 0x3b, 0xaa, 0xe5, 0xf4, 0x5f, 0x23, 0xe3, 0x77, 0x56, 0x78, 0xf9,
	0xe9, 0x0f, 0x61, 0xf0, 0xf0, 0xd1, 0xd1, 0x91, 0x54, 0xc1, 0x2a, 0xcd, 0x5a, 0xb7, 0xab, 0x34,
	0x35, 0x99, 0x8c, 0x37, 0xd0, 0x07, 0xd0, 0x11, 0xc2, 0x10, 0x6d, 0x55, 0xcb, 0x42, 0x1d, 0x8f,
	0xb7, 0x4d, 0x87, 0xb1, 0x3d, 0x36, 0xb6, 0xc7, 0xcd, 0xed, 0xb1, 0xdc, 0x7e, 0xab, 0x7c, 0xea,
	0xb9, 0x4c, 0xd2, 0xe2, 0x91, 0xaa, 0x4e, 0x8b, 0xa7, 0xd2, 0x51, 0x1c, 0xf6, 0x7a, 0x64, 0x2a,
	0xd8, 0x8d, 0x99, 0xae, 0x60, 0x37, 0x27, 0x2b, 0xde, 0x40, 0x77, 0xca, 0x47, 0x5d, 0x4c, 0x12,
	0x54, 0x7d, 0x77, 0x35, 0x09, 0xc7, 0xa8, 0xe9, 0x52, 0x87, 0x94, 0x96, 0x51, 0x87, 0x34, 0x21,
	0xa7, 0x0e, 0xe9, 0x72, 0x07, 0x6f, 0xa0, 0x6b, 0xe0, 0x96, 0xf2, 0x01, 0x8d, 0xd4, 0x57, 0x72,
	0x35, 0x33, 0xde, 0xd4, 0x4d, 0xbe, 0xf1, 0x3e, 0x8c, 0x8c, 0x29, 0x80, 0x76, 0xe5, 0x96, 0xc6,
	0x80, 0x1b, 0xbf, 0xbb, 0xd2, 0xaf, 0x22, 0x54, 0x6d, 0xa8, 0x22, 0xd4, 0x66, 0x85, 0x8a, 0xd0,
	0xe8, 0x54, 0x4e, 0x25, 0xad, 0x25, 0x14, 0x95, 0xcc, 0xee, 0x55, 0x54, 0x6a, 0xf4, 0x0e, 0xde,
	0x38, 0xee, 0xf0, 0x3f, 0x12, 0xef, 0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x58, 0x13, 0xc4,
	0x56, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PushServiceClient is the client API for PushService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushServiceClient interface {
	Connect(ctx context.Context, in *ConnectReq, opts ...grpc.CallOption) (*ConnectResp, error)
	Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc.CallOption) (*DisconnectResp, error)
	Subscribe(ctx context.Context, in *SubscribeReq, opts ...grpc.CallOption) (*SubscribeResp, error)
	Unsubscribe(ctx context.Context, in *UnsubscribeReq, opts ...grpc.CallOption) (*UnsubscribeResp, error)
	MQTTPublish(ctx context.Context, in *PublishReq, opts ...grpc.CallOption) (*PublishResp, error)
	Pubrec(ctx context.Context, in *PubrecReq, opts ...grpc.CallOption) (*PubrecResp, error)
	Pubrel(ctx context.Context, in *PubrelReq, opts ...grpc.CallOption) (*PubrelResp, error)
	Pubcomp(ctx context.Context, in *PubcompReq, opts ...grpc.CallOption) (*PubcompResp, error)
	RangeUnack(ctx context.Context, in *RangeUnackReq, opts ...grpc.CallOption) (*RangeUnackResp, error)
	PutUnack(ctx context.Context, in *PutUnackReq, opts ...grpc.CallOption) (*PutUnackResp, error)
	DelUnack(ctx context.Context, in *DelUnackReq, opts ...grpc.CallOption) (*DelUnackResp, error)
	Pull(ctx context.Context, in *PullReq, opts ...grpc.CallOption) (*PullResp, error)
	PostSubscribe(ctx context.Context, in *PostSubscribeReq, opts ...grpc.CallOption) (*PostSubscribeResp, error)
	AddRoute(ctx context.Context, in *AddRouteReq, opts ...grpc.CallOption) (*AddRouteResp, error)
	RemoveRoute(ctx context.Context, in *RemoveRouteReq, opts ...grpc.CallOption) (*RemoveRouteResp, error)
}

type pushServiceClient struct {
	cc *grpc.ClientConn
}

func NewPushServiceClient(cc *grpc.ClientConn) PushServiceClient {
	return &pushServiceClient{cc}
}

func (c *pushServiceClient) Connect(ctx context.Context, in *ConnectReq, opts ...grpc.CallOption) (*ConnectResp, error) {
	out := new(ConnectResp)
	err := c.cc.Invoke(ctx, "/push.PushService/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc.CallOption) (*DisconnectResp, error) {
	out := new(DisconnectResp)
	err := c.cc.Invoke(ctx, "/push.PushService/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) Subscribe(ctx context.Context, in *SubscribeReq, opts ...grpc.CallOption) (*SubscribeResp, error) {
	out := new(SubscribeResp)
	err := c.cc.Invoke(ctx, "/push.PushService/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) Unsubscribe(ctx context.Context, in *UnsubscribeReq, opts ...grpc.CallOption) (*UnsubscribeResp, error) {
	out := new(UnsubscribeResp)
	err := c.cc.Invoke(ctx, "/push.PushService/Unsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) MQTTPublish(ctx context.Context, in *PublishReq, opts ...grpc.CallOption) (*PublishResp, error) {
	out := new(PublishResp)
	err := c.cc.Invoke(ctx, "/push.PushService/MQTTPublish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) Pubrec(ctx context.Context, in *PubrecReq, opts ...grpc.CallOption) (*PubrecResp, error) {
	out := new(PubrecResp)
	err := c.cc.Invoke(ctx, "/push.PushService/Pubrec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) Pubrel(ctx context.Context, in *PubrelReq, opts ...grpc.CallOption) (*PubrelResp, error) {
	out := new(PubrelResp)
	err := c.cc.Invoke(ctx, "/push.PushService/Pubrel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) Pubcomp(ctx context.Context, in *PubcompReq, opts ...grpc.CallOption) (*PubcompResp, error) {
	out := new(PubcompResp)
	err := c.cc.Invoke(ctx, "/push.PushService/Pubcomp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) RangeUnack(ctx context.Context, in *RangeUnackReq, opts ...grpc.CallOption) (*RangeUnackResp, error) {
	out := new(RangeUnackResp)
	err := c.cc.Invoke(ctx, "/push.PushService/RangeUnack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) PutUnack(ctx context.Context, in *PutUnackReq, opts ...grpc.CallOption) (*PutUnackResp, error) {
	out := new(PutUnackResp)
	err := c.cc.Invoke(ctx, "/push.PushService/PutUnack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) DelUnack(ctx context.Context, in *DelUnackReq, opts ...grpc.CallOption) (*DelUnackResp, error) {
	out := new(DelUnackResp)
	err := c.cc.Invoke(ctx, "/push.PushService/DelUnack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) Pull(ctx context.Context, in *PullReq, opts ...grpc.CallOption) (*PullResp, error) {
	out := new(PullResp)
	err := c.cc.Invoke(ctx, "/push.PushService/Pull", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) PostSubscribe(ctx context.Context, in *PostSubscribeReq, opts ...grpc.CallOption) (*PostSubscribeResp, error) {
	out := new(PostSubscribeResp)
	err := c.cc.Invoke(ctx, "/push.PushService/PostSubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) AddRoute(ctx context.Context, in *AddRouteReq, opts ...grpc.CallOption) (*AddRouteResp, error) {
	out := new(AddRouteResp)
	err := c.cc.Invoke(ctx, "/push.PushService/AddRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) RemoveRoute(ctx context.Context, in *RemoveRouteReq, opts ...grpc.CallOption) (*RemoveRouteResp, error) {
	out := new(RemoveRouteResp)
	err := c.cc.Invoke(ctx, "/push.PushService/RemoveRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushServiceServer is the server API for PushService service.
type PushServiceServer interface {
	Connect(context.Context, *ConnectReq) (*ConnectResp, error)
	Disconnect(context.Context, *DisconnectReq) (*DisconnectResp, error)
	Subscribe(context.Context, *SubscribeReq) (*SubscribeResp, error)
	Unsubscribe(context.Context, *UnsubscribeReq) (*UnsubscribeResp, error)
	MQTTPublish(context.Context, *PublishReq) (*PublishResp, error)
	Pubrec(context.Context, *PubrecReq) (*PubrecResp, error)
	Pubrel(context.Context, *PubrelReq) (*PubrelResp, error)
	Pubcomp(context.Context, *PubcompReq) (*PubcompResp, error)
	RangeUnack(context.Context, *RangeUnackReq) (*RangeUnackResp, error)
	PutUnack(context.Context, *PutUnackReq) (*PutUnackResp, error)
	DelUnack(context.Context, *DelUnackReq) (*DelUnackResp, error)
	Pull(context.Context, *PullReq) (*PullResp, error)
	PostSubscribe(context.Context, *PostSubscribeReq) (*PostSubscribeResp, error)
	AddRoute(context.Context, *AddRouteReq) (*AddRouteResp, error)
	RemoveRoute(context.Context, *RemoveRouteReq) (*RemoveRouteResp, error)
}

// UnimplementedPushServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPushServiceServer struct {
}

func (*UnimplementedPushServiceServer) Connect(ctx context.Context, req *ConnectReq) (*ConnectResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedPushServiceServer) Disconnect(ctx context.Context, req *DisconnectReq) (*DisconnectResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (*UnimplementedPushServiceServer) Subscribe(ctx context.Context, req *SubscribeReq) (*SubscribeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedPushServiceServer) Unsubscribe(ctx context.Context, req *UnsubscribeReq) (*UnsubscribeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unsubscribe not implemented")
}
func (*UnimplementedPushServiceServer) MQTTPublish(ctx context.Context, req *PublishReq) (*PublishResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MQTTPublish not implemented")
}
func (*UnimplementedPushServiceServer) Pubrec(ctx context.Context, req *PubrecReq) (*PubrecResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pubrec not implemented")
}
func (*UnimplementedPushServiceServer) Pubrel(ctx context.Context, req *PubrelReq) (*PubrelResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pubrel not implemented")
}
func (*UnimplementedPushServiceServer) Pubcomp(ctx context.Context, req *PubcompReq) (*PubcompResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pubcomp not implemented")
}
func (*UnimplementedPushServiceServer) RangeUnack(ctx context.Context, req *RangeUnackReq) (*RangeUnackResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RangeUnack not implemented")
}
func (*UnimplementedPushServiceServer) PutUnack(ctx context.Context, req *PutUnackReq) (*PutUnackResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutUnack not implemented")
}
func (*UnimplementedPushServiceServer) DelUnack(ctx context.Context, req *DelUnackReq) (*DelUnackResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelUnack not implemented")
}
func (*UnimplementedPushServiceServer) Pull(ctx context.Context, req *PullReq) (*PullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pull not implemented")
}
func (*UnimplementedPushServiceServer) PostSubscribe(ctx context.Context, req *PostSubscribeReq) (*PostSubscribeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostSubscribe not implemented")
}
func (*UnimplementedPushServiceServer) AddRoute(ctx context.Context, req *AddRouteReq) (*AddRouteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRoute not implemented")
}
func (*UnimplementedPushServiceServer) RemoveRoute(ctx context.Context, req *RemoveRouteReq) (*RemoveRouteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRoute not implemented")
}

func RegisterPushServiceServer(s *grpc.Server, srv PushServiceServer) {
	s.RegisterService(&_PushService_serviceDesc, srv)
}

func _PushService_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).Connect(ctx, req.(*ConnectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).Disconnect(ctx, req.(*DisconnectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).Subscribe(ctx, req.(*SubscribeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_Unsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).Unsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/Unsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).Unsubscribe(ctx, req.(*UnsubscribeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_MQTTPublish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).MQTTPublish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/MQTTPublish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).MQTTPublish(ctx, req.(*PublishReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_Pubrec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PubrecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).Pubrec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/Pubrec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).Pubrec(ctx, req.(*PubrecReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_Pubrel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PubrelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).Pubrel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/Pubrel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).Pubrel(ctx, req.(*PubrelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_Pubcomp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PubcompReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).Pubcomp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/Pubcomp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).Pubcomp(ctx, req.(*PubcompReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_RangeUnack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RangeUnackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).RangeUnack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/RangeUnack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).RangeUnack(ctx, req.(*RangeUnackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_PutUnack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutUnackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).PutUnack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/PutUnack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).PutUnack(ctx, req.(*PutUnackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_DelUnack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelUnackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).DelUnack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/DelUnack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).DelUnack(ctx, req.(*DelUnackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_Pull_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).Pull(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/Pull",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).Pull(ctx, req.(*PullReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_PostSubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostSubscribeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).PostSubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/PostSubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).PostSubscribe(ctx, req.(*PostSubscribeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_AddRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRouteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).AddRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/AddRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).AddRoute(ctx, req.(*AddRouteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_RemoveRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRouteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).RemoveRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushService/RemoveRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).RemoveRoute(ctx, req.(*RemoveRouteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PushService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "push.PushService",
	HandlerType: (*PushServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _PushService_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _PushService_Disconnect_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _PushService_Subscribe_Handler,
		},
		{
			MethodName: "Unsubscribe",
			Handler:    _PushService_Unsubscribe_Handler,
		},
		{
			MethodName: "MQTTPublish",
			Handler:    _PushService_MQTTPublish_Handler,
		},
		{
			MethodName: "Pubrec",
			Handler:    _PushService_Pubrec_Handler,
		},
		{
			MethodName: "Pubrel",
			Handler:    _PushService_Pubrel_Handler,
		},
		{
			MethodName: "Pubcomp",
			Handler:    _PushService_Pubcomp_Handler,
		},
		{
			MethodName: "RangeUnack",
			Handler:    _PushService_RangeUnack_Handler,
		},
		{
			MethodName: "PutUnack",
			Handler:    _PushService_PutUnack_Handler,
		},
		{
			MethodName: "DelUnack",
			Handler:    _PushService_DelUnack_Handler,
		},
		{
			MethodName: "Pull",
			Handler:    _PushService_Pull_Handler,
		},
		{
			MethodName: "PostSubscribe",
			Handler:    _PushService_PostSubscribe_Handler,
		},
		{
			MethodName: "AddRoute",
			Handler:    _PushService_AddRoute_Handler,
		},
		{
			MethodName: "RemoveRoute",
			Handler:    _PushService_RemoveRoute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "push.proto",
}
